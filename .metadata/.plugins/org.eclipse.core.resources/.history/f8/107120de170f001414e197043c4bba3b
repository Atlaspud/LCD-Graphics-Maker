package controller;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.SwingUtilities;
import javax.swing.Timer;

import model.GridField;
import view.GridDisplay;
import view.MainFrame;

public class App {
	
	static GridField gridField;
	static GridDisplay gridDisplay;
	static MainFrame mainFrame;
	static Timer animationTimer;

	public static void main(String[] args) {
		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				setup();
			}
		});
	}
	
	private static void setup() {
		gridField = new GridField(new Dimension(800,600));
		gridDisplay = new GridDisplay(gridField,new Dimension(800,600));
		mainFrame = new MainFrame(gridDisplay);
		
		gridDisplay.setFocusable(true);
		gridField.reset();
		
		gridDisplay.addMouseListener(new MouseListener() {
			
			@Override
			public void mouseReleased(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mousePressed(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseExited(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseEntered(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseClicked(MouseEvent e) {
				System.out.println(e.getX());
				System.out.println(e.getY());
			}
		});
			
		gridDisplay.addKeyListener(new KeyAdapter() {
			
			@Override
			public void keyReleased(KeyEvent e) {
				
			}
		});
		
		animationTimer = new Timer(10, new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {

				// updates the position of all block objects
				gridField.update();
				gridDisplay.repaint();
				
			}
		});
		mainFrame.pack();
		mainFrame.setLocationRelativeTo(null);
		mainFrame.setVisible(true);
	}

}
